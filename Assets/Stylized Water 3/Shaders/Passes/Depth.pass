//Currently not used, but may be used by custom transparency-depth passes
Pass
{
    Name "Depth"
    Tags { "LightMode" = "DepthOnly" }
    
    ZWrite On
    //ColorMask R
    Cull Off

    HLSLPROGRAM
    %pragma_target%
    %pragma_renderers%

    #pragma multi_compile_instancing
    #pragma instancing_options renderinglayer

    #include_library "Libraries/URP.hlsl"
    #include_with_pragmas "Packages/com.unity.render-pipelines.universal/ShaderLibrary/DOTS.hlsl"
    //#include "Assets/Amazing Assets/Curved World/Shaders/Core/CurvedWorldTransform.cginc"

    #pragma shader_feature_local _WAVES

    #define SHADERPASS_DEPTHONLY

    #include_library "Libraries/Input.hlsl"
    #include_library "Libraries/Common.hlsl"
    #include_library "Libraries/Waves.hlsl"

    %multi_compile dynamic effects%
    #ifdef DYNAMIC_EFFECTS_ENABLED
    #include_library "DynamicEffects/DynamicEffects.hlsl"
    #endif
    
    #include_library "Passes/HeightPrePass.hlsl"

    #pragma vertex HeightPassVertex

    #pragma fragment DepthOnlyFragment
    float4 DepthOnlyFragment(HeightPassVaryings input) : SV_TARGET
    {
        UNITY_SETUP_INSTANCE_ID(input);
        UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(input);

        return float4(input.positionCS.z, 0, 0, 1);
    }
    ENDHLSL
}