// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel FillWhite
#pragma kernel DrawSpot

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> snowImage;
float colorValueToAdd;
float resolution;
float positionX;
float positionY;
float spotSize;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    snowImage[id.xy] += float4(colorValueToAdd, colorValueToAdd, colorValueToAdd, colorValueToAdd);
}

[numthreads(8, 8, 1)]
void FillWhite(uint3 id : SV_DispatchThreadID)
{
    snowImage[id.xy] = float4(1.0, 1.0, 1.0, 1.0);
}

[numthreads(8, 8, 1)]
void DrawSpot(uint3 id : SV_DispatchThreadID)
{
    float x = id.x / resolution;
    float y = id.y / resolution;
    float value;

    value = sqrt(((x - positionX / resolution) * (x - positionX / resolution) + (y - positionY / resolution) * (y - positionY / resolution))) * 10000;

    if (value < spotSize)
    {
        if (value / spotSize > snowImage[id.xy].x) return;

        snowImage[id.xy] = float4(value, value, value, value) / spotSize;
    }
}